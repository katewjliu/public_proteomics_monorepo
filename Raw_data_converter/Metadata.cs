// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MyProject.Proto {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90byLGAwoWR2VuZXJhbEZpbGVJbmZvcm1hdGlvbhIT",
            "CgtyYXdGaWxlTmFtZRgBIAEoCRIWCg5yYXdGaWxlVmVyc2lvbhgCIAEoCRIU",
            "CgxjcmVhdGlvbkRhdGUYAyABKAkSFAoMb3BlcmF0b3JOYW1lGAQgASgJEhsK",
            "E251bWJlck9mSW5zdHJ1bWVudHMYBSABKAUSEwoLZGVzY3JpcHRpb24YBiAB",
            "KAkSFwoPaW5zdHJ1bWVudE1vZGVsGAcgASgJEhYKDmluc3RydW1lbnROYW1l",
            "GAggASgJEhQKDHNlcmlhbE51bWJlchgJIAEoCRIXCg9zb2Z0d2FyZVZlcnNp",
            "b24YCiABKAkSFwoPZmlybXdhcmVWZXJzaW9uGAsgASgJEg0KBXVuaXRzGAwg",
            "ASgJEhYKDm1hc3NSZXNvbHV0aW9uGA0gASgBEhUKDW51bWJlck9mU2NhbnMY",
            "DiABKAUSEQoJZmlyc3RTY2FuGA8gASgFEhAKCGxhc3RTY2FuGBAgASgFEhEK",
            "CXN0YXJ0VGltZRgRIAEoCRIPCgdlbmRUaW1lGBIgASgJEg8KB2xvd01hc3MY",
            "EyABKAESEAoIaGlnaE1hc3MYFCABKAEiygEKFVNhbXBsZUluZm9ybWF0aW9u",
            "RGF0YRISCgpzYW1wbGVOYW1lGAEgASgJEhAKCHNhbXBsZUlkGAIgASgJEhIK",
            "CnNhbXBsZVR5cGUYAyABKAkSDwoHY29tbWVudBgEIAEoCRIMCgR2aWFsGAUg",
            "ASgJEhQKDHNhbXBsZVZvbHVtZRgGIAEoARIXCg9pbmplY3Rpb25Wb2x1bWUY",
            "ByABKAESEQoJcm93TnVtYmVyGAggASgFEhYKDmRpbHV0aW9uRmFjdG9yGAkg",
            "ASgBIiQKDlNjYW5GaWx0ZXJEYXRhEhIKCmZpbHRlclRleHQYASABKAkihAEK",
            "DFNjYW5NZXRhZGF0YRISCgpzY2FuTnVtYmVyGAEgASgFEhUKDXJldGVudGlv",
            "blRpbWUYAiABKAESGwoDbXMxGAMgASgLMgwuTVMxTWV0YWRhdGFIABIbCgNt",
            "czIYBCABKAsyDC5NUzJNZXRhZGF0YUgAQg8KDXNjYW5fc3BlY2lmaWMiRwoL",
            "TVMxTWV0YWRhdGESHQoVcmF3RmlsZUluc3RydW1lbnRUeXBlGAEgASgJEhkK",
            "EW51bURlcGVuZGVudFNjYW5zGAIgASgFIqoBCgtNUzJNZXRhZGF0YRISCgpt",
            "YXN0ZXJTY2FuGAEgASgFEhYKDmlvbml6YXRpb25Nb2RlGAIgASgJEg0KBW9y",
            "ZGVyGAMgASgJEhUKDXByZWN1cnNvck1hc3MYBCABKAESGAoQbW9ub2lzb3Rv",
            "cGljTWFzcxgFIAEoARIXCg9jb2xsaXNpb25FbmVyZ3kYBiABKAESFgoOaXNv",
            "bGF0aW9uV2lkdGgYByABKAEinAIKCE1ldGFkYXRhEjcKFmdlbmVyYWxGaWxl",
            "SW5mb3JtYXRpb24YASABKAsyFy5HZW5lcmFsRmlsZUluZm9ybWF0aW9uEjEK",
            "EXNhbXBsZUluZm9ybWF0aW9uGAIgASgLMhYuU2FtcGxlSW5mb3JtYXRpb25E",
            "YXRhEhoKEnRyYWlsZXJFeHRyYUZpZWxkcxgDIAMoCRIXCg9udW1iZXJPZkZp",
            "bHRlcnMYBCABKAUSKAoPZmlyc3RTY2FuRmlsdGVyGAUgASgLMg8uU2NhbkZp",
            "bHRlckRhdGESJwoObGFzdFNjYW5GaWx0ZXIYBiABKAsyDy5TY2FuRmlsdGVy",
            "RGF0YRIcCgVzY2FucxgHIAMoCzINLlNjYW5NZXRhZGF0YUISqgIPTXlQcm9q",
            "ZWN0LlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.GeneralFileInformation), global::MyProject.Proto.GeneralFileInformation.Parser, new[]{ "RawFileName", "RawFileVersion", "CreationDate", "OperatorName", "NumberOfInstruments", "Description", "InstrumentModel", "InstrumentName", "SerialNumber", "SoftwareVersion", "FirmwareVersion", "Units", "MassResolution", "NumberOfScans", "FirstScan", "LastScan", "StartTime", "EndTime", "LowMass", "HighMass" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.SampleInformationData), global::MyProject.Proto.SampleInformationData.Parser, new[]{ "SampleName", "SampleId", "SampleType", "Comment", "Vial", "SampleVolume", "InjectionVolume", "RowNumber", "DilutionFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.ScanFilterData), global::MyProject.Proto.ScanFilterData.Parser, new[]{ "FilterText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.ScanMetadata), global::MyProject.Proto.ScanMetadata.Parser, new[]{ "ScanNumber", "RetentionTime", "Ms1", "Ms2" }, new[]{ "ScanSpecific" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.MS1Metadata), global::MyProject.Proto.MS1Metadata.Parser, new[]{ "RawFileInstrumentType", "NumDependentScans" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.MS2Metadata), global::MyProject.Proto.MS2Metadata.Parser, new[]{ "MasterScan", "IonizationMode", "Order", "PrecursorMass", "MonoisotopicMass", "CollisionEnergy", "IsolationWidth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyProject.Proto.Metadata), global::MyProject.Proto.Metadata.Parser, new[]{ "GeneralFileInformation", "SampleInformation", "TrailerExtraFields", "NumberOfFilters", "FirstScanFilter", "LastScanFilter", "Scans" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GeneralFileInformation : pb::IMessage<GeneralFileInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeneralFileInformation> _parser = new pb::MessageParser<GeneralFileInformation>(() => new GeneralFileInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GeneralFileInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralFileInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralFileInformation(GeneralFileInformation other) : this() {
      rawFileName_ = other.rawFileName_;
      rawFileVersion_ = other.rawFileVersion_;
      creationDate_ = other.creationDate_;
      operatorName_ = other.operatorName_;
      numberOfInstruments_ = other.numberOfInstruments_;
      description_ = other.description_;
      instrumentModel_ = other.instrumentModel_;
      instrumentName_ = other.instrumentName_;
      serialNumber_ = other.serialNumber_;
      softwareVersion_ = other.softwareVersion_;
      firmwareVersion_ = other.firmwareVersion_;
      units_ = other.units_;
      massResolution_ = other.massResolution_;
      numberOfScans_ = other.numberOfScans_;
      firstScan_ = other.firstScan_;
      lastScan_ = other.lastScan_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      lowMass_ = other.lowMass_;
      highMass_ = other.highMass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralFileInformation Clone() {
      return new GeneralFileInformation(this);
    }

    /// <summary>Field number for the "rawFileName" field.</summary>
    public const int RawFileNameFieldNumber = 1;
    private string rawFileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RawFileName {
      get { return rawFileName_; }
      set {
        rawFileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rawFileVersion" field.</summary>
    public const int RawFileVersionFieldNumber = 2;
    private string rawFileVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RawFileVersion {
      get { return rawFileVersion_; }
      set {
        rawFileVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creationDate" field.</summary>
    public const int CreationDateFieldNumber = 3;
    private string creationDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreationDate {
      get { return creationDate_; }
      set {
        creationDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operatorName" field.</summary>
    public const int OperatorNameFieldNumber = 4;
    private string operatorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatorName {
      get { return operatorName_; }
      set {
        operatorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numberOfInstruments" field.</summary>
    public const int NumberOfInstrumentsFieldNumber = 5;
    private int numberOfInstruments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfInstruments {
      get { return numberOfInstruments_; }
      set {
        numberOfInstruments_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrumentModel" field.</summary>
    public const int InstrumentModelFieldNumber = 7;
    private string instrumentModel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentModel {
      get { return instrumentModel_; }
      set {
        instrumentModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrumentName" field.</summary>
    public const int InstrumentNameFieldNumber = 8;
    private string instrumentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentName {
      get { return instrumentName_; }
      set {
        instrumentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serialNumber" field.</summary>
    public const int SerialNumberFieldNumber = 9;
    private string serialNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "softwareVersion" field.</summary>
    public const int SoftwareVersionFieldNumber = 10;
    private string softwareVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SoftwareVersion {
      get { return softwareVersion_; }
      set {
        softwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "firmwareVersion" field.</summary>
    public const int FirmwareVersionFieldNumber = 11;
    private string firmwareVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FirmwareVersion {
      get { return firmwareVersion_; }
      set {
        firmwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 12;
    private string units_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Units {
      get { return units_; }
      set {
        units_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "massResolution" field.</summary>
    public const int MassResolutionFieldNumber = 13;
    private double massResolution_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MassResolution {
      get { return massResolution_; }
      set {
        massResolution_ = value;
      }
    }

    /// <summary>Field number for the "numberOfScans" field.</summary>
    public const int NumberOfScansFieldNumber = 14;
    private int numberOfScans_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfScans {
      get { return numberOfScans_; }
      set {
        numberOfScans_ = value;
      }
    }

    /// <summary>Field number for the "firstScan" field.</summary>
    public const int FirstScanFieldNumber = 15;
    private int firstScan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FirstScan {
      get { return firstScan_; }
      set {
        firstScan_ = value;
      }
    }

    /// <summary>Field number for the "lastScan" field.</summary>
    public const int LastScanFieldNumber = 16;
    private int lastScan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LastScan {
      get { return lastScan_; }
      set {
        lastScan_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 17;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 18;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lowMass" field.</summary>
    public const int LowMassFieldNumber = 19;
    private double lowMass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double LowMass {
      get { return lowMass_; }
      set {
        lowMass_ = value;
      }
    }

    /// <summary>Field number for the "highMass" field.</summary>
    public const int HighMassFieldNumber = 20;
    private double highMass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HighMass {
      get { return highMass_; }
      set {
        highMass_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GeneralFileInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GeneralFileInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawFileName != other.RawFileName) return false;
      if (RawFileVersion != other.RawFileVersion) return false;
      if (CreationDate != other.CreationDate) return false;
      if (OperatorName != other.OperatorName) return false;
      if (NumberOfInstruments != other.NumberOfInstruments) return false;
      if (Description != other.Description) return false;
      if (InstrumentModel != other.InstrumentModel) return false;
      if (InstrumentName != other.InstrumentName) return false;
      if (SerialNumber != other.SerialNumber) return false;
      if (SoftwareVersion != other.SoftwareVersion) return false;
      if (FirmwareVersion != other.FirmwareVersion) return false;
      if (Units != other.Units) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MassResolution, other.MassResolution)) return false;
      if (NumberOfScans != other.NumberOfScans) return false;
      if (FirstScan != other.FirstScan) return false;
      if (LastScan != other.LastScan) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LowMass, other.LowMass)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HighMass, other.HighMass)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RawFileName.Length != 0) hash ^= RawFileName.GetHashCode();
      if (RawFileVersion.Length != 0) hash ^= RawFileVersion.GetHashCode();
      if (CreationDate.Length != 0) hash ^= CreationDate.GetHashCode();
      if (OperatorName.Length != 0) hash ^= OperatorName.GetHashCode();
      if (NumberOfInstruments != 0) hash ^= NumberOfInstruments.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (InstrumentModel.Length != 0) hash ^= InstrumentModel.GetHashCode();
      if (InstrumentName.Length != 0) hash ^= InstrumentName.GetHashCode();
      if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
      if (SoftwareVersion.Length != 0) hash ^= SoftwareVersion.GetHashCode();
      if (FirmwareVersion.Length != 0) hash ^= FirmwareVersion.GetHashCode();
      if (Units.Length != 0) hash ^= Units.GetHashCode();
      if (MassResolution != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MassResolution);
      if (NumberOfScans != 0) hash ^= NumberOfScans.GetHashCode();
      if (FirstScan != 0) hash ^= FirstScan.GetHashCode();
      if (LastScan != 0) hash ^= LastScan.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (LowMass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LowMass);
      if (HighMass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HighMass);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RawFileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RawFileName);
      }
      if (RawFileVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RawFileVersion);
      }
      if (CreationDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreationDate);
      }
      if (OperatorName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OperatorName);
      }
      if (NumberOfInstruments != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NumberOfInstruments);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (InstrumentModel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InstrumentModel);
      }
      if (InstrumentName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InstrumentName);
      }
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SerialNumber);
      }
      if (SoftwareVersion.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SoftwareVersion);
      }
      if (FirmwareVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FirmwareVersion);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Units);
      }
      if (MassResolution != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MassResolution);
      }
      if (NumberOfScans != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(NumberOfScans);
      }
      if (FirstScan != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FirstScan);
      }
      if (LastScan != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(LastScan);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(EndTime);
      }
      if (LowMass != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(LowMass);
      }
      if (HighMass != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(HighMass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RawFileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RawFileName);
      }
      if (RawFileVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RawFileVersion);
      }
      if (CreationDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreationDate);
      }
      if (OperatorName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OperatorName);
      }
      if (NumberOfInstruments != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NumberOfInstruments);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (InstrumentModel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(InstrumentModel);
      }
      if (InstrumentName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InstrumentName);
      }
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SerialNumber);
      }
      if (SoftwareVersion.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SoftwareVersion);
      }
      if (FirmwareVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FirmwareVersion);
      }
      if (Units.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Units);
      }
      if (MassResolution != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(MassResolution);
      }
      if (NumberOfScans != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(NumberOfScans);
      }
      if (FirstScan != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(FirstScan);
      }
      if (LastScan != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(LastScan);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(EndTime);
      }
      if (LowMass != 0D) {
        output.WriteRawTag(153, 1);
        output.WriteDouble(LowMass);
      }
      if (HighMass != 0D) {
        output.WriteRawTag(161, 1);
        output.WriteDouble(HighMass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RawFileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RawFileName);
      }
      if (RawFileVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RawFileVersion);
      }
      if (CreationDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreationDate);
      }
      if (OperatorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperatorName);
      }
      if (NumberOfInstruments != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfInstruments);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (InstrumentModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentModel);
      }
      if (InstrumentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentName);
      }
      if (SerialNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (SoftwareVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftwareVersion);
      }
      if (FirmwareVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmwareVersion);
      }
      if (Units.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Units);
      }
      if (MassResolution != 0D) {
        size += 1 + 8;
      }
      if (NumberOfScans != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfScans);
      }
      if (FirstScan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstScan);
      }
      if (LastScan != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastScan);
      }
      if (StartTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (LowMass != 0D) {
        size += 2 + 8;
      }
      if (HighMass != 0D) {
        size += 2 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GeneralFileInformation other) {
      if (other == null) {
        return;
      }
      if (other.RawFileName.Length != 0) {
        RawFileName = other.RawFileName;
      }
      if (other.RawFileVersion.Length != 0) {
        RawFileVersion = other.RawFileVersion;
      }
      if (other.CreationDate.Length != 0) {
        CreationDate = other.CreationDate;
      }
      if (other.OperatorName.Length != 0) {
        OperatorName = other.OperatorName;
      }
      if (other.NumberOfInstruments != 0) {
        NumberOfInstruments = other.NumberOfInstruments;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.InstrumentModel.Length != 0) {
        InstrumentModel = other.InstrumentModel;
      }
      if (other.InstrumentName.Length != 0) {
        InstrumentName = other.InstrumentName;
      }
      if (other.SerialNumber.Length != 0) {
        SerialNumber = other.SerialNumber;
      }
      if (other.SoftwareVersion.Length != 0) {
        SoftwareVersion = other.SoftwareVersion;
      }
      if (other.FirmwareVersion.Length != 0) {
        FirmwareVersion = other.FirmwareVersion;
      }
      if (other.Units.Length != 0) {
        Units = other.Units;
      }
      if (other.MassResolution != 0D) {
        MassResolution = other.MassResolution;
      }
      if (other.NumberOfScans != 0) {
        NumberOfScans = other.NumberOfScans;
      }
      if (other.FirstScan != 0) {
        FirstScan = other.FirstScan;
      }
      if (other.LastScan != 0) {
        LastScan = other.LastScan;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.LowMass != 0D) {
        LowMass = other.LowMass;
      }
      if (other.HighMass != 0D) {
        HighMass = other.HighMass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RawFileName = input.ReadString();
            break;
          }
          case 18: {
            RawFileVersion = input.ReadString();
            break;
          }
          case 26: {
            CreationDate = input.ReadString();
            break;
          }
          case 34: {
            OperatorName = input.ReadString();
            break;
          }
          case 40: {
            NumberOfInstruments = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            InstrumentModel = input.ReadString();
            break;
          }
          case 66: {
            InstrumentName = input.ReadString();
            break;
          }
          case 74: {
            SerialNumber = input.ReadString();
            break;
          }
          case 82: {
            SoftwareVersion = input.ReadString();
            break;
          }
          case 90: {
            FirmwareVersion = input.ReadString();
            break;
          }
          case 98: {
            Units = input.ReadString();
            break;
          }
          case 105: {
            MassResolution = input.ReadDouble();
            break;
          }
          case 112: {
            NumberOfScans = input.ReadInt32();
            break;
          }
          case 120: {
            FirstScan = input.ReadInt32();
            break;
          }
          case 128: {
            LastScan = input.ReadInt32();
            break;
          }
          case 138: {
            StartTime = input.ReadString();
            break;
          }
          case 146: {
            EndTime = input.ReadString();
            break;
          }
          case 153: {
            LowMass = input.ReadDouble();
            break;
          }
          case 161: {
            HighMass = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RawFileName = input.ReadString();
            break;
          }
          case 18: {
            RawFileVersion = input.ReadString();
            break;
          }
          case 26: {
            CreationDate = input.ReadString();
            break;
          }
          case 34: {
            OperatorName = input.ReadString();
            break;
          }
          case 40: {
            NumberOfInstruments = input.ReadInt32();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
          case 58: {
            InstrumentModel = input.ReadString();
            break;
          }
          case 66: {
            InstrumentName = input.ReadString();
            break;
          }
          case 74: {
            SerialNumber = input.ReadString();
            break;
          }
          case 82: {
            SoftwareVersion = input.ReadString();
            break;
          }
          case 90: {
            FirmwareVersion = input.ReadString();
            break;
          }
          case 98: {
            Units = input.ReadString();
            break;
          }
          case 105: {
            MassResolution = input.ReadDouble();
            break;
          }
          case 112: {
            NumberOfScans = input.ReadInt32();
            break;
          }
          case 120: {
            FirstScan = input.ReadInt32();
            break;
          }
          case 128: {
            LastScan = input.ReadInt32();
            break;
          }
          case 138: {
            StartTime = input.ReadString();
            break;
          }
          case 146: {
            EndTime = input.ReadString();
            break;
          }
          case 153: {
            LowMass = input.ReadDouble();
            break;
          }
          case 161: {
            HighMass = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SampleInformationData : pb::IMessage<SampleInformationData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SampleInformationData> _parser = new pb::MessageParser<SampleInformationData>(() => new SampleInformationData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SampleInformationData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleInformationData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleInformationData(SampleInformationData other) : this() {
      sampleName_ = other.sampleName_;
      sampleId_ = other.sampleId_;
      sampleType_ = other.sampleType_;
      comment_ = other.comment_;
      vial_ = other.vial_;
      sampleVolume_ = other.sampleVolume_;
      injectionVolume_ = other.injectionVolume_;
      rowNumber_ = other.rowNumber_;
      dilutionFactor_ = other.dilutionFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleInformationData Clone() {
      return new SampleInformationData(this);
    }

    /// <summary>Field number for the "sampleName" field.</summary>
    public const int SampleNameFieldNumber = 1;
    private string sampleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SampleName {
      get { return sampleName_; }
      set {
        sampleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sampleId" field.</summary>
    public const int SampleIdFieldNumber = 2;
    private string sampleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SampleId {
      get { return sampleId_; }
      set {
        sampleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sampleType" field.</summary>
    public const int SampleTypeFieldNumber = 3;
    private string sampleType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SampleType {
      get { return sampleType_; }
      set {
        sampleType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 4;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vial" field.</summary>
    public const int VialFieldNumber = 5;
    private string vial_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Vial {
      get { return vial_; }
      set {
        vial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sampleVolume" field.</summary>
    public const int SampleVolumeFieldNumber = 6;
    private double sampleVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SampleVolume {
      get { return sampleVolume_; }
      set {
        sampleVolume_ = value;
      }
    }

    /// <summary>Field number for the "injectionVolume" field.</summary>
    public const int InjectionVolumeFieldNumber = 7;
    private double injectionVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InjectionVolume {
      get { return injectionVolume_; }
      set {
        injectionVolume_ = value;
      }
    }

    /// <summary>Field number for the "rowNumber" field.</summary>
    public const int RowNumberFieldNumber = 8;
    private int rowNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RowNumber {
      get { return rowNumber_; }
      set {
        rowNumber_ = value;
      }
    }

    /// <summary>Field number for the "dilutionFactor" field.</summary>
    public const int DilutionFactorFieldNumber = 9;
    private double dilutionFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DilutionFactor {
      get { return dilutionFactor_; }
      set {
        dilutionFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SampleInformationData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SampleInformationData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SampleName != other.SampleName) return false;
      if (SampleId != other.SampleId) return false;
      if (SampleType != other.SampleType) return false;
      if (Comment != other.Comment) return false;
      if (Vial != other.Vial) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SampleVolume, other.SampleVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InjectionVolume, other.InjectionVolume)) return false;
      if (RowNumber != other.RowNumber) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DilutionFactor, other.DilutionFactor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SampleName.Length != 0) hash ^= SampleName.GetHashCode();
      if (SampleId.Length != 0) hash ^= SampleId.GetHashCode();
      if (SampleType.Length != 0) hash ^= SampleType.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Vial.Length != 0) hash ^= Vial.GetHashCode();
      if (SampleVolume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SampleVolume);
      if (InjectionVolume != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InjectionVolume);
      if (RowNumber != 0) hash ^= RowNumber.GetHashCode();
      if (DilutionFactor != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DilutionFactor);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SampleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SampleName);
      }
      if (SampleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SampleId);
      }
      if (SampleType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SampleType);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (Vial.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Vial);
      }
      if (SampleVolume != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(SampleVolume);
      }
      if (InjectionVolume != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(InjectionVolume);
      }
      if (RowNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RowNumber);
      }
      if (DilutionFactor != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(DilutionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SampleName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SampleName);
      }
      if (SampleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SampleId);
      }
      if (SampleType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SampleType);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Comment);
      }
      if (Vial.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Vial);
      }
      if (SampleVolume != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(SampleVolume);
      }
      if (InjectionVolume != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(InjectionVolume);
      }
      if (RowNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RowNumber);
      }
      if (DilutionFactor != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(DilutionFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SampleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SampleName);
      }
      if (SampleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SampleId);
      }
      if (SampleType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SampleType);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Vial.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Vial);
      }
      if (SampleVolume != 0D) {
        size += 1 + 8;
      }
      if (InjectionVolume != 0D) {
        size += 1 + 8;
      }
      if (RowNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowNumber);
      }
      if (DilutionFactor != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SampleInformationData other) {
      if (other == null) {
        return;
      }
      if (other.SampleName.Length != 0) {
        SampleName = other.SampleName;
      }
      if (other.SampleId.Length != 0) {
        SampleId = other.SampleId;
      }
      if (other.SampleType.Length != 0) {
        SampleType = other.SampleType;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Vial.Length != 0) {
        Vial = other.Vial;
      }
      if (other.SampleVolume != 0D) {
        SampleVolume = other.SampleVolume;
      }
      if (other.InjectionVolume != 0D) {
        InjectionVolume = other.InjectionVolume;
      }
      if (other.RowNumber != 0) {
        RowNumber = other.RowNumber;
      }
      if (other.DilutionFactor != 0D) {
        DilutionFactor = other.DilutionFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SampleName = input.ReadString();
            break;
          }
          case 18: {
            SampleId = input.ReadString();
            break;
          }
          case 26: {
            SampleType = input.ReadString();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
          case 42: {
            Vial = input.ReadString();
            break;
          }
          case 49: {
            SampleVolume = input.ReadDouble();
            break;
          }
          case 57: {
            InjectionVolume = input.ReadDouble();
            break;
          }
          case 64: {
            RowNumber = input.ReadInt32();
            break;
          }
          case 73: {
            DilutionFactor = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SampleName = input.ReadString();
            break;
          }
          case 18: {
            SampleId = input.ReadString();
            break;
          }
          case 26: {
            SampleType = input.ReadString();
            break;
          }
          case 34: {
            Comment = input.ReadString();
            break;
          }
          case 42: {
            Vial = input.ReadString();
            break;
          }
          case 49: {
            SampleVolume = input.ReadDouble();
            break;
          }
          case 57: {
            InjectionVolume = input.ReadDouble();
            break;
          }
          case 64: {
            RowNumber = input.ReadInt32();
            break;
          }
          case 73: {
            DilutionFactor = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScanFilterData : pb::IMessage<ScanFilterData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScanFilterData> _parser = new pb::MessageParser<ScanFilterData>(() => new ScanFilterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanFilterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanFilterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanFilterData(ScanFilterData other) : this() {
      filterText_ = other.filterText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanFilterData Clone() {
      return new ScanFilterData(this);
    }

    /// <summary>Field number for the "filterText" field.</summary>
    public const int FilterTextFieldNumber = 1;
    private string filterText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilterText {
      get { return filterText_; }
      set {
        filterText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanFilterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanFilterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilterText != other.FilterText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FilterText.Length != 0) hash ^= FilterText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FilterText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilterText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FilterText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilterText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FilterText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilterText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanFilterData other) {
      if (other == null) {
        return;
      }
      if (other.FilterText.Length != 0) {
        FilterText = other.FilterText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilterText = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FilterText = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScanMetadata : pb::IMessage<ScanMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScanMetadata> _parser = new pb::MessageParser<ScanMetadata>(() => new ScanMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScanMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanMetadata(ScanMetadata other) : this() {
      scanNumber_ = other.scanNumber_;
      retentionTime_ = other.retentionTime_;
      switch (other.ScanSpecificCase) {
        case ScanSpecificOneofCase.Ms1:
          Ms1 = other.Ms1.Clone();
          break;
        case ScanSpecificOneofCase.Ms2:
          Ms2 = other.Ms2.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanMetadata Clone() {
      return new ScanMetadata(this);
    }

    /// <summary>Field number for the "scanNumber" field.</summary>
    public const int ScanNumberFieldNumber = 1;
    private int scanNumber_;
    /// <summary>
    /// Common fields
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ScanNumber {
      get { return scanNumber_; }
      set {
        scanNumber_ = value;
      }
    }

    /// <summary>Field number for the "retentionTime" field.</summary>
    public const int RetentionTimeFieldNumber = 2;
    private double retentionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RetentionTime {
      get { return retentionTime_; }
      set {
        retentionTime_ = value;
      }
    }

    /// <summary>Field number for the "ms1" field.</summary>
    public const int Ms1FieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.MS1Metadata Ms1 {
      get { return scanSpecificCase_ == ScanSpecificOneofCase.Ms1 ? (global::MyProject.Proto.MS1Metadata) scanSpecific_ : null; }
      set {
        scanSpecific_ = value;
        scanSpecificCase_ = value == null ? ScanSpecificOneofCase.None : ScanSpecificOneofCase.Ms1;
      }
    }

    /// <summary>Field number for the "ms2" field.</summary>
    public const int Ms2FieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.MS2Metadata Ms2 {
      get { return scanSpecificCase_ == ScanSpecificOneofCase.Ms2 ? (global::MyProject.Proto.MS2Metadata) scanSpecific_ : null; }
      set {
        scanSpecific_ = value;
        scanSpecificCase_ = value == null ? ScanSpecificOneofCase.None : ScanSpecificOneofCase.Ms2;
      }
    }

    private object scanSpecific_;
    /// <summary>Enum of possible cases for the "scan_specific" oneof.</summary>
    public enum ScanSpecificOneofCase {
      None = 0,
      Ms1 = 3,
      Ms2 = 4,
    }
    private ScanSpecificOneofCase scanSpecificCase_ = ScanSpecificOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScanSpecificOneofCase ScanSpecificCase {
      get { return scanSpecificCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScanSpecific() {
      scanSpecificCase_ = ScanSpecificOneofCase.None;
      scanSpecific_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScanMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScanMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScanNumber != other.ScanNumber) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RetentionTime, other.RetentionTime)) return false;
      if (!object.Equals(Ms1, other.Ms1)) return false;
      if (!object.Equals(Ms2, other.Ms2)) return false;
      if (ScanSpecificCase != other.ScanSpecificCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ScanNumber != 0) hash ^= ScanNumber.GetHashCode();
      if (RetentionTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RetentionTime);
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) hash ^= Ms1.GetHashCode();
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) hash ^= Ms2.GetHashCode();
      hash ^= (int) scanSpecificCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ScanNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScanNumber);
      }
      if (RetentionTime != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RetentionTime);
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) {
        output.WriteRawTag(26);
        output.WriteMessage(Ms1);
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) {
        output.WriteRawTag(34);
        output.WriteMessage(Ms2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ScanNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ScanNumber);
      }
      if (RetentionTime != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(RetentionTime);
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) {
        output.WriteRawTag(26);
        output.WriteMessage(Ms1);
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) {
        output.WriteRawTag(34);
        output.WriteMessage(Ms2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ScanNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScanNumber);
      }
      if (RetentionTime != 0D) {
        size += 1 + 8;
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ms1);
      }
      if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ms2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScanMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ScanNumber != 0) {
        ScanNumber = other.ScanNumber;
      }
      if (other.RetentionTime != 0D) {
        RetentionTime = other.RetentionTime;
      }
      switch (other.ScanSpecificCase) {
        case ScanSpecificOneofCase.Ms1:
          if (Ms1 == null) {
            Ms1 = new global::MyProject.Proto.MS1Metadata();
          }
          Ms1.MergeFrom(other.Ms1);
          break;
        case ScanSpecificOneofCase.Ms2:
          if (Ms2 == null) {
            Ms2 = new global::MyProject.Proto.MS2Metadata();
          }
          Ms2.MergeFrom(other.Ms2);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScanNumber = input.ReadInt32();
            break;
          }
          case 17: {
            RetentionTime = input.ReadDouble();
            break;
          }
          case 26: {
            global::MyProject.Proto.MS1Metadata subBuilder = new global::MyProject.Proto.MS1Metadata();
            if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) {
              subBuilder.MergeFrom(Ms1);
            }
            input.ReadMessage(subBuilder);
            Ms1 = subBuilder;
            break;
          }
          case 34: {
            global::MyProject.Proto.MS2Metadata subBuilder = new global::MyProject.Proto.MS2Metadata();
            if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) {
              subBuilder.MergeFrom(Ms2);
            }
            input.ReadMessage(subBuilder);
            Ms2 = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ScanNumber = input.ReadInt32();
            break;
          }
          case 17: {
            RetentionTime = input.ReadDouble();
            break;
          }
          case 26: {
            global::MyProject.Proto.MS1Metadata subBuilder = new global::MyProject.Proto.MS1Metadata();
            if (scanSpecificCase_ == ScanSpecificOneofCase.Ms1) {
              subBuilder.MergeFrom(Ms1);
            }
            input.ReadMessage(subBuilder);
            Ms1 = subBuilder;
            break;
          }
          case 34: {
            global::MyProject.Proto.MS2Metadata subBuilder = new global::MyProject.Proto.MS2Metadata();
            if (scanSpecificCase_ == ScanSpecificOneofCase.Ms2) {
              subBuilder.MergeFrom(Ms2);
            }
            input.ReadMessage(subBuilder);
            Ms2 = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MS1 specific metadata
  /// </summary>
  public sealed partial class MS1Metadata : pb::IMessage<MS1Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MS1Metadata> _parser = new pb::MessageParser<MS1Metadata>(() => new MS1Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MS1Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS1Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS1Metadata(MS1Metadata other) : this() {
      rawFileInstrumentType_ = other.rawFileInstrumentType_;
      numDependentScans_ = other.numDependentScans_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS1Metadata Clone() {
      return new MS1Metadata(this);
    }

    /// <summary>Field number for the "rawFileInstrumentType" field.</summary>
    public const int RawFileInstrumentTypeFieldNumber = 1;
    private string rawFileInstrumentType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RawFileInstrumentType {
      get { return rawFileInstrumentType_; }
      set {
        rawFileInstrumentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numDependentScans" field.</summary>
    public const int NumDependentScansFieldNumber = 2;
    private int numDependentScans_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumDependentScans {
      get { return numDependentScans_; }
      set {
        numDependentScans_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MS1Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MS1Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawFileInstrumentType != other.RawFileInstrumentType) return false;
      if (NumDependentScans != other.NumDependentScans) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RawFileInstrumentType.Length != 0) hash ^= RawFileInstrumentType.GetHashCode();
      if (NumDependentScans != 0) hash ^= NumDependentScans.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RawFileInstrumentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RawFileInstrumentType);
      }
      if (NumDependentScans != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumDependentScans);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RawFileInstrumentType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RawFileInstrumentType);
      }
      if (NumDependentScans != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumDependentScans);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RawFileInstrumentType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RawFileInstrumentType);
      }
      if (NumDependentScans != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumDependentScans);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MS1Metadata other) {
      if (other == null) {
        return;
      }
      if (other.RawFileInstrumentType.Length != 0) {
        RawFileInstrumentType = other.RawFileInstrumentType;
      }
      if (other.NumDependentScans != 0) {
        NumDependentScans = other.NumDependentScans;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RawFileInstrumentType = input.ReadString();
            break;
          }
          case 16: {
            NumDependentScans = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RawFileInstrumentType = input.ReadString();
            break;
          }
          case 16: {
            NumDependentScans = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MS2 specific metadata
  /// </summary>
  public sealed partial class MS2Metadata : pb::IMessage<MS2Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MS2Metadata> _parser = new pb::MessageParser<MS2Metadata>(() => new MS2Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MS2Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS2Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS2Metadata(MS2Metadata other) : this() {
      masterScan_ = other.masterScan_;
      ionizationMode_ = other.ionizationMode_;
      order_ = other.order_;
      precursorMass_ = other.precursorMass_;
      monoisotopicMass_ = other.monoisotopicMass_;
      collisionEnergy_ = other.collisionEnergy_;
      isolationWidth_ = other.isolationWidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MS2Metadata Clone() {
      return new MS2Metadata(this);
    }

    /// <summary>Field number for the "masterScan" field.</summary>
    public const int MasterScanFieldNumber = 1;
    private int masterScan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MasterScan {
      get { return masterScan_; }
      set {
        masterScan_ = value;
      }
    }

    /// <summary>Field number for the "ionizationMode" field.</summary>
    public const int IonizationModeFieldNumber = 2;
    private string ionizationMode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IonizationMode {
      get { return ionizationMode_; }
      set {
        ionizationMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 3;
    private string order_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Order {
      get { return order_; }
      set {
        order_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "precursorMass" field.</summary>
    public const int PrecursorMassFieldNumber = 4;
    private double precursorMass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double PrecursorMass {
      get { return precursorMass_; }
      set {
        precursorMass_ = value;
      }
    }

    /// <summary>Field number for the "monoisotopicMass" field.</summary>
    public const int MonoisotopicMassFieldNumber = 5;
    private double monoisotopicMass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MonoisotopicMass {
      get { return monoisotopicMass_; }
      set {
        monoisotopicMass_ = value;
      }
    }

    /// <summary>Field number for the "collisionEnergy" field.</summary>
    public const int CollisionEnergyFieldNumber = 6;
    private double collisionEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CollisionEnergy {
      get { return collisionEnergy_; }
      set {
        collisionEnergy_ = value;
      }
    }

    /// <summary>Field number for the "isolationWidth" field.</summary>
    public const int IsolationWidthFieldNumber = 7;
    private double isolationWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double IsolationWidth {
      get { return isolationWidth_; }
      set {
        isolationWidth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MS2Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MS2Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MasterScan != other.MasterScan) return false;
      if (IonizationMode != other.IonizationMode) return false;
      if (Order != other.Order) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PrecursorMass, other.PrecursorMass)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MonoisotopicMass, other.MonoisotopicMass)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CollisionEnergy, other.CollisionEnergy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(IsolationWidth, other.IsolationWidth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MasterScan != 0) hash ^= MasterScan.GetHashCode();
      if (IonizationMode.Length != 0) hash ^= IonizationMode.GetHashCode();
      if (Order.Length != 0) hash ^= Order.GetHashCode();
      if (PrecursorMass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PrecursorMass);
      if (MonoisotopicMass != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MonoisotopicMass);
      if (CollisionEnergy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CollisionEnergy);
      if (IsolationWidth != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(IsolationWidth);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MasterScan != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MasterScan);
      }
      if (IonizationMode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IonizationMode);
      }
      if (Order.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Order);
      }
      if (PrecursorMass != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PrecursorMass);
      }
      if (MonoisotopicMass != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MonoisotopicMass);
      }
      if (CollisionEnergy != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CollisionEnergy);
      }
      if (IsolationWidth != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(IsolationWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MasterScan != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MasterScan);
      }
      if (IonizationMode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IonizationMode);
      }
      if (Order.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Order);
      }
      if (PrecursorMass != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PrecursorMass);
      }
      if (MonoisotopicMass != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MonoisotopicMass);
      }
      if (CollisionEnergy != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CollisionEnergy);
      }
      if (IsolationWidth != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(IsolationWidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MasterScan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MasterScan);
      }
      if (IonizationMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IonizationMode);
      }
      if (Order.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Order);
      }
      if (PrecursorMass != 0D) {
        size += 1 + 8;
      }
      if (MonoisotopicMass != 0D) {
        size += 1 + 8;
      }
      if (CollisionEnergy != 0D) {
        size += 1 + 8;
      }
      if (IsolationWidth != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MS2Metadata other) {
      if (other == null) {
        return;
      }
      if (other.MasterScan != 0) {
        MasterScan = other.MasterScan;
      }
      if (other.IonizationMode.Length != 0) {
        IonizationMode = other.IonizationMode;
      }
      if (other.Order.Length != 0) {
        Order = other.Order;
      }
      if (other.PrecursorMass != 0D) {
        PrecursorMass = other.PrecursorMass;
      }
      if (other.MonoisotopicMass != 0D) {
        MonoisotopicMass = other.MonoisotopicMass;
      }
      if (other.CollisionEnergy != 0D) {
        CollisionEnergy = other.CollisionEnergy;
      }
      if (other.IsolationWidth != 0D) {
        IsolationWidth = other.IsolationWidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MasterScan = input.ReadInt32();
            break;
          }
          case 18: {
            IonizationMode = input.ReadString();
            break;
          }
          case 26: {
            Order = input.ReadString();
            break;
          }
          case 33: {
            PrecursorMass = input.ReadDouble();
            break;
          }
          case 41: {
            MonoisotopicMass = input.ReadDouble();
            break;
          }
          case 49: {
            CollisionEnergy = input.ReadDouble();
            break;
          }
          case 57: {
            IsolationWidth = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MasterScan = input.ReadInt32();
            break;
          }
          case 18: {
            IonizationMode = input.ReadString();
            break;
          }
          case 26: {
            Order = input.ReadString();
            break;
          }
          case 33: {
            PrecursorMass = input.ReadDouble();
            break;
          }
          case 41: {
            MonoisotopicMass = input.ReadDouble();
            break;
          }
          case 49: {
            CollisionEnergy = input.ReadDouble();
            break;
          }
          case 57: {
            IsolationWidth = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Metadata : pb::IMessage<Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyProject.Proto.MetadataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata(Metadata other) : this() {
      generalFileInformation_ = other.generalFileInformation_ != null ? other.generalFileInformation_.Clone() : null;
      sampleInformation_ = other.sampleInformation_ != null ? other.sampleInformation_.Clone() : null;
      trailerExtraFields_ = other.trailerExtraFields_.Clone();
      numberOfFilters_ = other.numberOfFilters_;
      firstScanFilter_ = other.firstScanFilter_ != null ? other.firstScanFilter_.Clone() : null;
      lastScanFilter_ = other.lastScanFilter_ != null ? other.lastScanFilter_.Clone() : null;
      scans_ = other.scans_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "generalFileInformation" field.</summary>
    public const int GeneralFileInformationFieldNumber = 1;
    private global::MyProject.Proto.GeneralFileInformation generalFileInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.GeneralFileInformation GeneralFileInformation {
      get { return generalFileInformation_; }
      set {
        generalFileInformation_ = value;
      }
    }

    /// <summary>Field number for the "sampleInformation" field.</summary>
    public const int SampleInformationFieldNumber = 2;
    private global::MyProject.Proto.SampleInformationData sampleInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.SampleInformationData SampleInformation {
      get { return sampleInformation_; }
      set {
        sampleInformation_ = value;
      }
    }

    /// <summary>Field number for the "trailerExtraFields" field.</summary>
    public const int TrailerExtraFieldsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_trailerExtraFields_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> trailerExtraFields_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TrailerExtraFields {
      get { return trailerExtraFields_; }
    }

    /// <summary>Field number for the "numberOfFilters" field.</summary>
    public const int NumberOfFiltersFieldNumber = 4;
    private int numberOfFilters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumberOfFilters {
      get { return numberOfFilters_; }
      set {
        numberOfFilters_ = value;
      }
    }

    /// <summary>Field number for the "firstScanFilter" field.</summary>
    public const int FirstScanFilterFieldNumber = 5;
    private global::MyProject.Proto.ScanFilterData firstScanFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.ScanFilterData FirstScanFilter {
      get { return firstScanFilter_; }
      set {
        firstScanFilter_ = value;
      }
    }

    /// <summary>Field number for the "lastScanFilter" field.</summary>
    public const int LastScanFilterFieldNumber = 6;
    private global::MyProject.Proto.ScanFilterData lastScanFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MyProject.Proto.ScanFilterData LastScanFilter {
      get { return lastScanFilter_; }
      set {
        lastScanFilter_ = value;
      }
    }

    /// <summary>Field number for the "scans" field.</summary>
    public const int ScansFieldNumber = 7;
    private static readonly pb::FieldCodec<global::MyProject.Proto.ScanMetadata> _repeated_scans_codec
        = pb::FieldCodec.ForMessage(58, global::MyProject.Proto.ScanMetadata.Parser);
    private readonly pbc::RepeatedField<global::MyProject.Proto.ScanMetadata> scans_ = new pbc::RepeatedField<global::MyProject.Proto.ScanMetadata>();
    /// <summary>
    /// new scan level sampleInformation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MyProject.Proto.ScanMetadata> Scans {
      get { return scans_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GeneralFileInformation, other.GeneralFileInformation)) return false;
      if (!object.Equals(SampleInformation, other.SampleInformation)) return false;
      if(!trailerExtraFields_.Equals(other.trailerExtraFields_)) return false;
      if (NumberOfFilters != other.NumberOfFilters) return false;
      if (!object.Equals(FirstScanFilter, other.FirstScanFilter)) return false;
      if (!object.Equals(LastScanFilter, other.LastScanFilter)) return false;
      if(!scans_.Equals(other.scans_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (generalFileInformation_ != null) hash ^= GeneralFileInformation.GetHashCode();
      if (sampleInformation_ != null) hash ^= SampleInformation.GetHashCode();
      hash ^= trailerExtraFields_.GetHashCode();
      if (NumberOfFilters != 0) hash ^= NumberOfFilters.GetHashCode();
      if (firstScanFilter_ != null) hash ^= FirstScanFilter.GetHashCode();
      if (lastScanFilter_ != null) hash ^= LastScanFilter.GetHashCode();
      hash ^= scans_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (generalFileInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeneralFileInformation);
      }
      if (sampleInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SampleInformation);
      }
      trailerExtraFields_.WriteTo(output, _repeated_trailerExtraFields_codec);
      if (NumberOfFilters != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfFilters);
      }
      if (firstScanFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FirstScanFilter);
      }
      if (lastScanFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastScanFilter);
      }
      scans_.WriteTo(output, _repeated_scans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (generalFileInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeneralFileInformation);
      }
      if (sampleInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SampleInformation);
      }
      trailerExtraFields_.WriteTo(ref output, _repeated_trailerExtraFields_codec);
      if (NumberOfFilters != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfFilters);
      }
      if (firstScanFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FirstScanFilter);
      }
      if (lastScanFilter_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastScanFilter);
      }
      scans_.WriteTo(ref output, _repeated_scans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (generalFileInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeneralFileInformation);
      }
      if (sampleInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SampleInformation);
      }
      size += trailerExtraFields_.CalculateSize(_repeated_trailerExtraFields_codec);
      if (NumberOfFilters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfFilters);
      }
      if (firstScanFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstScanFilter);
      }
      if (lastScanFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastScanFilter);
      }
      size += scans_.CalculateSize(_repeated_scans_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.generalFileInformation_ != null) {
        if (generalFileInformation_ == null) {
          GeneralFileInformation = new global::MyProject.Proto.GeneralFileInformation();
        }
        GeneralFileInformation.MergeFrom(other.GeneralFileInformation);
      }
      if (other.sampleInformation_ != null) {
        if (sampleInformation_ == null) {
          SampleInformation = new global::MyProject.Proto.SampleInformationData();
        }
        SampleInformation.MergeFrom(other.SampleInformation);
      }
      trailerExtraFields_.Add(other.trailerExtraFields_);
      if (other.NumberOfFilters != 0) {
        NumberOfFilters = other.NumberOfFilters;
      }
      if (other.firstScanFilter_ != null) {
        if (firstScanFilter_ == null) {
          FirstScanFilter = new global::MyProject.Proto.ScanFilterData();
        }
        FirstScanFilter.MergeFrom(other.FirstScanFilter);
      }
      if (other.lastScanFilter_ != null) {
        if (lastScanFilter_ == null) {
          LastScanFilter = new global::MyProject.Proto.ScanFilterData();
        }
        LastScanFilter.MergeFrom(other.LastScanFilter);
      }
      scans_.Add(other.scans_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (generalFileInformation_ == null) {
              GeneralFileInformation = new global::MyProject.Proto.GeneralFileInformation();
            }
            input.ReadMessage(GeneralFileInformation);
            break;
          }
          case 18: {
            if (sampleInformation_ == null) {
              SampleInformation = new global::MyProject.Proto.SampleInformationData();
            }
            input.ReadMessage(SampleInformation);
            break;
          }
          case 26: {
            trailerExtraFields_.AddEntriesFrom(input, _repeated_trailerExtraFields_codec);
            break;
          }
          case 32: {
            NumberOfFilters = input.ReadInt32();
            break;
          }
          case 42: {
            if (firstScanFilter_ == null) {
              FirstScanFilter = new global::MyProject.Proto.ScanFilterData();
            }
            input.ReadMessage(FirstScanFilter);
            break;
          }
          case 50: {
            if (lastScanFilter_ == null) {
              LastScanFilter = new global::MyProject.Proto.ScanFilterData();
            }
            input.ReadMessage(LastScanFilter);
            break;
          }
          case 58: {
            scans_.AddEntriesFrom(input, _repeated_scans_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (generalFileInformation_ == null) {
              GeneralFileInformation = new global::MyProject.Proto.GeneralFileInformation();
            }
            input.ReadMessage(GeneralFileInformation);
            break;
          }
          case 18: {
            if (sampleInformation_ == null) {
              SampleInformation = new global::MyProject.Proto.SampleInformationData();
            }
            input.ReadMessage(SampleInformation);
            break;
          }
          case 26: {
            trailerExtraFields_.AddEntriesFrom(ref input, _repeated_trailerExtraFields_codec);
            break;
          }
          case 32: {
            NumberOfFilters = input.ReadInt32();
            break;
          }
          case 42: {
            if (firstScanFilter_ == null) {
              FirstScanFilter = new global::MyProject.Proto.ScanFilterData();
            }
            input.ReadMessage(FirstScanFilter);
            break;
          }
          case 50: {
            if (lastScanFilter_ == null) {
              LastScanFilter = new global::MyProject.Proto.ScanFilterData();
            }
            input.ReadMessage(LastScanFilter);
            break;
          }
          case 58: {
            scans_.AddEntriesFrom(ref input, _repeated_scans_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
